from pprint import pprint


# __new__ -Вызываеться перед созданием обьэкта класса,должен возвращать адресс нового созданого обьэкта!
class Point(object):
    """Все классы наследуються от базового класса object у которого есть свои базовые методы"""

    def __new__(cls, *args, **kwargs):
        """cls->сылаеться на текущий экземпляр класа Point"""
        print(F'Вызов __new__ для {cls}')
        return super().__new__(cls)  # возвращаем адресс нового созданого обьэкта из базового класса

    def __int__(self, x=0, y=0):
        """self->сылаеться на cоздаваемый экземпляр класса-> p =Point()"""
        print(F'Вызов __init__ для {self}')
        self.x = x
        self.y = y


point1 = Point(1, 2)  # вызываеться сначала метод __new__ в *args и **kwargs  передаються аргументы (1,2)
print(point1)  # -> None экземпляр класа не был создан если не определен returt в __new__!
print('______')
pprint(object.__dict__)  # ->> методы базового класса,которые можно переопределять в дальнейшем!
